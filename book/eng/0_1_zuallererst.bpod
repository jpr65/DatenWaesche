# Buch

=head1 At First 

This chapter describes the fundamental structures of the book and you get hints,
how to work with this book.

=head2 Goals Of This Book

This book has several goals:

It should illustrate, that a systematic data validation will reduce time and costs of
software development and does a big improve of the software quality. 

It should generate your awareness, that data validation is an absolute must and its neglecting
will create heavy problems.

It should give all involved parties the necessary knowlegde about data validation.

It should be a guideline for data validation.

If it would start a CleanData initiative analog to the CleanCode initiative, that would be more
than to be expected.

=head2 How to read this book

=head3 For undecided readers

Did you read the rear page (rear side of book?) ? If not, start there.

Then read the introduction, afterwards this chapter and choose one of the roles
described in the following.

=head3 For Strong-Willed

Read the introduction and the following subchapters of this one, start at
"How learning works"

=head3 For Software Users

...

=head3 Für Entscheider

...

=head3 For Software Specialists

Read the whole book.

=head3 For Testers

...

=head2 How learning works

repeat, repeat, repeat...

[not translated]

Menschen lernen durch Beispiele und Wiederholungen, die wenigsten haben ein fotographisches
Gedächtnis, durch das sie wie durch Wikipedia browsen können.

Ich gebe zwar auch Definitionen und Namen an,
arbeite aber sehr viel mit Beispielen und Wiederholungen.

Wie viele Software-Entwickler habe ich sogar ein schlechtes Gedächtnis. Wie ich mittlerweile
herausgefunden habe, führt dieser Umstand zu besserer Software, wenn man ihn berücksichtigt:

Man dokumentiert, was man entwickelt hat und warum man es B<so> entwickelt hat,
wenn es ungewöhnlich ist. Man verwendet sprechende, konsistente Namen für alles und
liefert Fehlermeldungen, die auch Jahre später noch verständlich sind.

Da Anwender und Entscheider im Allgemeinen keine Software-Entwicklungsexperten sein müssen,
wiederhole ich kurze Erklärungen für wichtige Begriffe, wichtige Eigenschaften
oder wichtige Resultate, damit man nicht immer im Buch hin- und herspringen muss,
was besonders in der gedruckten Version sehr lästig ist.

=head2 How to work with the book

[not translated]

In der Überschrift oder Einleitung jedes Kapitels informiere ich darüber, für welche Zielgruppen 
dieses Kapitel interessant ist, wenn es nicht für alle geschrieben ist.

Ansonsten spreche ich technische Details kurz an und verweise auf vertiefende Stellen im Buch.

Ich bemühe mich um eine allgemein verständliche Sprache. Das wird mir nicht immer gelingen
und ich bin für Hinweise auf "Entwicklerische" Worte und Darstellungen dankbar. 

Falls es doch zu technisch wird, überlesen Sie einfach die entsprechenden Passagen,
das geht vorbei wie ein kleiner Regenschauer. Falls technisch umsetzbar
werde ich solche Teile mit einem "Achtung: Technik"-Symbol am Rand
der Seite markieren.

=head4 And now: Attention: Software Technics

[not translated]

Falls Sie Codezeilen nicht verstehen, treten Sie ein wenig zurück und lassen Sie
das so entstehende Bild auf sich wirken, ohne zu lesen. Wirkt es unordentlich und kompliziert,
dann B<ist der Code auch unordentlich und kompliziert>. Ein Entwickler, der sich die Stelle
zwei Jahre später wieder ansieht, muss sich in unordentlichen und komplizierten Code
auch erst wieder mühsam einarbeiten. Die Genies, die das in weniger als 1 Sekunde korrekt
erfassen, habe ich bisher nur in Fernsehserien angetroffen.
